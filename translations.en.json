{
  "layout.footer.copyright": "© {yearStart}-{yearEnd}, LLC «<link>{brand}</link>». All rights reserved",
  "articleAr.title": "Localization for the Arabic-speaking world: RTL, formats and cultural codes",
  "articleAr.text": "Arabic interfaces require rethinking the usual element order: the writing direction changes to RTL. In this article, we explain how to properly adapt layout, typography and icons so that the interface looks natural for Arabic-speaking users while remaining universal.",
  "articleCss.title": "Using Logical CSS Properties for Internationalized Interfaces",
  "articleCss.intro": "In recent years, more attention has been paid to creating truly global web products. This is especially relevant for projects whose audience is distributed worldwide. When developing interfaces in languages such as Arabic, where text and layout direction go from right to left (RTL), it's important that the visual behavior of components remains intuitive. One of the key tools for this is logical CSS properties.",
  "articleCss.diff": "Unlike physical properties (e.g., <code>margin-left</code>, <code>padding-right</code>, <code>border-top</code>), logical properties (<code>margin-inline-start</code>, <code>padding-block-end</code>, <code>border-inline</code>) describe behavior relative to the writing direction rather than a fixed screen direction. This is especially important in projects where content can be in English, Arabic, Chinese, Russian, and other languages with different directions.",
  "articleCss.whyImportant.title": "Why This Matters for i18n Frontend",
  "articleCss.whyImportant.text": "Using logical properties makes the code more adaptive and reduces the need for conditional styles or CSS duplication. It also simplifies maintenance, especially in multilingual products where switching between LTR and RTL should be as seamless as possible.",
  "articleCss.whyImportant.list": "Here are some benefits of logical properties in the context of internationalization: <ul><li>Universality: one set of styles fits all writing directions.</li><li>Easier maintenance: less code, fewer errors when making changes.</li><li>Flexibility: easy to add new languages without changing the style structure.</li><li>Consistency: the same visual behavior for all users, regardless of language.</li><li>Relevance: compliance with modern CSS standards and UI design best practices.</li></ul>",
  "articleCss.conclusion.title": "Conclusion",
  "articleCss.conclusion.text": "Using logical CSS properties is a simple and effective way to make interfaces truly adaptive and globally oriented. This approach allows for consideration of linguistic and cultural differences without complicating the code or duplicating styles.",
  "articleEn.title": "Designing for a Global Audience: English as a Universal Language",
  "articleEn.text": "English is often used in interfaces as a universal language, especially at the MVP stage or when targeting international markets. We share recommendations on how to write interface texts that remain clear, neutral and easy to translate in the future.",
  "articleI18nKz.title": "Russian and Kazakh: Effective Localization for Kazakhstan",
  "articleI18nKz.text": "Kazakhstan is a unique market where two languages are used simultaneously: Russian and Kazakh. Moreover, Kazakh can be written in both Cyrillic and Latin scripts. We explain how to properly support both languages, including date formats, translations, and language switching in the interface.",
  "articleL10nRu.title": "How to adapt a web application for Russian users: localization nuances",
  "articleL10nRu.text1": "The Russian audience is one of the largest in Eastern Europe, with more than {usersCount} internet users. At the same time, about {percent} prefer sites in Russian. When localizing, it's important to consider number formats (e.g., decimal separator is a comma), currencies and dates.",
  "articleL10nRu.text2": "Legal aspects should also be considered: the personal data law requires information to be stored on servers within the country. Many companies have complied with this requirement since {date}",
  "articleRtlIcons.title": "Which icons should be flipped for RTL, {br} and which should not?",
  "articleRtlIcons.intro": "When adapting interfaces for right-to-left (RTL) languages, it's important to consider not only layout and text but also visual elements. Many icons require mirroring, while others should remain in their original form. Incorrect display can make the interface less intuitive and confuse users.",
  "articleRtlIcons.whyImportant.title": "Why is it important to flip icons in RTL?",
  "articleRtlIcons.whyImportant.text": "In RTL interfaces, not only the text direction changes but also the interaction logic. Icons with clear directionality should reflect this change to maintain natural perception flow and meet user expectations.",
  "articleRtlIcons.flipIcons.title": "Icons that should be flipped",
  "articleRtlIcons.flipIcons.text": "Flip icons that have a clear direction or asymmetric shape (except for examples we'll discuss later in the article). For example, a notes icon with clear text direction, an asymmetric application window UI icon, or a message icon. Examples of such icons:",
  "articleRtlIcons.dontFlipIcons.title": "Icons that should not be flipped",
  "articleRtlIcons.dontFlipIcons.text": "You don't need to flip symmetrical icons. Icons that are logos or represent a brand should also not be mirrored - they should remain recognizable. Pay special attention to elements that follow the “right-hand rule” - if an icon is intuitively associated with a right-hand action (like holding an object), its orientation should be preserved regardless of writing direction. Examples of such icons:",
  "articleRtlIcons.conclusion.title": "Conclusion",
  "articleRtlIcons.conclusion.text1": "Proper handling of icons in RTL interfaces is an important part of localization. This is not just a technical detail, but a way to make the interface truly convenient for users with different cultural characteristics.",
  "articleRtlIcons.conclusion.text2": "<strong>Recommendation:</strong> Develop internal standards for designers and developers to ensure a consistent approach to working with icons in all product localizations.",
  "articleUiBy.title": "Bilingual interface: how to accommodate Russian and Belarusian languages in one product",
  "articleUiBy.text": "Creating an interface for Belarus is a bilingual challenge. The product should be understandable for both Russian-speaking and Belarusian-speaking users. We examine how to organize the translation structure, what UX solutions exist for language switching, and why it's important to pay attention to the authenticity of Belarusian content.",
  "homePage.hero.title": "Connecting digital worlds in all languages",
  "homePage.hero.conference": "I&L Conference {year}",
  "homePage.hero.location": "Moscow, Russia",
  "homePage.hero.price": "{price} ticket",
  "homePage.hero.register": "Register",
  "homePage.regionArticle.title": "Relevant for your region",
  "homePage.ruArticle.title": "How to adapt a web application for Russian users: localization nuances",
  "homePage.ruArticle.description": "Exploring preferences of Russian-speaking users, number and currency formats, interface translation and legal aspects (e.g., personal data law)",
  "homePage.byArticle.title": "Bilingual interface: how to accommodate Russian and Belarusian languages in one product",
  "homePage.byArticle.description": "Examining approaches to implementing a bilingual interface, translation standards and cultural differences. Special attention to Belarusian language content",
  "homePage.kzArticle.title": "Russian and Kazakh: effective localization for Kazakhstan",
  "homePage.kzArticle.description": "Analyzing scenarios when an application should be available in two languages simultaneously and features of Kazakh localization (including support for Latin and Cyrillic scripts, date formats)",
  "homePage.arArticle.title": "Localization for the Arabic-speaking world: RTL, formats and cultural codes",
  "homePage.arArticle.description": "From adapting the interface for right-to-left writing direction to choosing the right wording - key aspects of localization for Middle Eastern and North African countries",
  "homePage.enArticle.title": "Designing for a global audience: English as a universal language",
  "homePage.enArticle.description": "Why English is often used as the default language in international applications and how to write interface texts that will be clear, culturally neutral and convenient for subsequent localization",
  "homePage.rtlArticle.title": "Which icons should be flipped for RTL, and which should not?",
  "homePage.rtlArticle.description": "Not all icons require mirroring when switching to RTL languages. We figure out which icons depend on text direction and which are universal",
  "homePage.cssArticle.title": "Logical CSS properties in i18n-supported interfaces",
  "homePage.cssArticle.description": "Learn how logical CSS properties help create adaptive interfaces for different languages and writing directions - without complicating code or duplicating styles.",
  "homePage.articles.title": "Articles",
  "homePage.articles.description": "Total {count, plural, one {# article} other {# articles}}",
  "homePage.article.read": "Read",
  "app.title": "Alt"
} 