{
  "layout.footer.copyright": "© {yearStart}-{yearEnd}, ООО «<link>{brand}</link>». Все права защищены",
  "articleAr.title": "Локализация для арабоязычного мира: RTL, форматы и культурные коды",
  "articleAr.text": "Интерфейсы на арабском языке требуют переосмысления привычного порядка элементов: направление письма меняется на RTL. В статье мы объясняем, как грамотно адаптировать верстку, типографику и иконки, чтобы интерфейс выглядел естественно для арабоязычных пользователей, и при этом оставался универсальным.",
  "articleCss.title": "Использование логических CSS-свойств для интернационализированных интерфейсов",
  "articleCss.intro": "В последние годы всё больше внимания уделяется созданию по-настоящему глобальных веб-продуктов. Особенно это актуально для проектов, чья аудитория распределена по всему миру. При разработке интерфейсов на таких языках, как арабский, где текст и направление верстки идут справа налево (RTL), важно, чтобы визуальное поведение компонентов оставалось интуитивным. Одним из ключевых инструментов для этого являются логические CSS-свойства.",
  "articleCss.diff": "В отличие от физических свойств (например, <code>margin-left</code>, <code>padding-right</code>, <code>border-top</code>), логические свойства (<code>margin-inline-start</code>, <code>padding-block-end</code>, <code>border-inline</code>) описывают поведение относительно направления письма, а не фиксированного направления экрана. Это особенно важно в проектах, где контент может быть как на английском, так и на арабском, китайском, русском и других языках с различной направленностью.",
  "articleCss.whyImportant.title": "Почему это важно для i18n-фронтенда",
  "articleCss.whyImportant.text": "Использование логических свойств делает код более адаптивным и уменьшает потребность в условных стилях или дублировании CSS. Это также упрощает поддержку, особенно в многоязычных продуктах, где переключение между LTR и RTL должно быть максимально бесшовным.",
  "articleCss.whyImportant.list": "Вот несколько преимуществ, которые дают логические свойства в контексте интернационализации: <ul><li>Универсальность: один набор стилей подходит для всех направлений письма.</li><li>Простота поддержки: меньше кода, меньше ошибок при внесении изменений.</li><li>Гибкость: легко добавлять новые языки, не меняя структуру стилей.</li><li>Последовательность: одинаковое визуальное поведение для всех пользователей, независимо от языка.</li><li>Актуальность: соответствие современным стандартам CSS и лучшим практикам UI-дизайна.</li></ul>",
  "articleCss.conclusion.title": "Заключение",
  "articleCss.conclusion.text": "Использование логических CSS-свойств — это простой и эффективный способ сделать интерфейсы по-настоящему адаптивными и ориентированными на глобальную аудиторию. Такой подход позволяет учитывать языковые и культурные особенности без необходимости в усложнении кода или дублировании стилей.",
  "articleEn.title": "Проектирование для глобальной аудитории: английский как универсальный язык",
  "articleEn.text": "Английский язык часто используется в интерфейсах как универсальный, особенно на этапе MVP или при работе на международный рынок. Мы делимся рекомендациями, как писать интерфейсные тексты, которые останутся понятными, нейтральными и легко поддающимися переводу в будущем.",
  "articleI18nKz.title": "Русский и казахский: эффективная локализация для Казахстана",
  "articleI18nKz.text": "Казахстан — уникальный рынок, где используются сразу два языка: русский и казахский. Причём казахский может быть как на кириллице, так и на латинице. Мы рассказываем, как обеспечить корректную поддержку обоих языков, с учётом форматов дат, переводов, и переключения языка в интерфейсе.",
  "articleL10nRu.title": "Как адаптировать веб-приложение под российских пользователей: нюансы локализации",
  "articleL10nRu.text1": "Российская аудитория — одна из крупнейших в Восточной Европе, с более чем {usersCount} интернет-пользователей. При этом около {percent} предпочитают сайты на русском языке. При локализации важно учитывать форматы чисел (например, десятичный разделитель — запятая), валют и дат.",
  "articleL10nRu.text2": "Также стоит обращать внимание на юридические аспекты: закон о персональных данных требует хранения информации на серверах внутри страны. Многие компании перешли на соответствие этому требованию ещё с {date}",
  "articleRtlIcons.title": "Какие иконки нужно разворачивать для RTL, {br} а какие — нет?",
  "articleRtlIcons.intro": "При адаптации интерфейсов под языки с письмом справа налево (RTL) важно учитывать не только верстку и тексты, но и визуальные элементы. Многие иконки требуют зеркального отражения, а другие должны оставаться в оригинальном виде. Неправильное отображение может сделать интерфейс менее интуитивным и запутать пользователя.",
  "articleRtlIcons.whyImportant.title": "Почему важно разворачивать иконки в RTL?",
  "articleRtlIcons.whyImportant.text": "В RTL-интерфейсах меняется не только направление текста, но и логика взаимодействия. Иконки с явной направленностью должны отражать это изменение, чтобы сохранить естественный поток восприятия и соответствовать ожиданиям пользователя.",
  "articleRtlIcons.flipIcons.title": "Иконки, которые нужно разворачивать",
  "articleRtlIcons.flipIcons.text": "Разворачивайте иконки, которые имеют явное направление или асимметричную форму (за исключением примеров, которые мы рассмотрим позже в статье). Например, иконка заметок с явным направлением текста, асимметричная иконка пользовательского интерфейса окна приложения или иконка сообщения. Примеры таких иконок:",
  "articleRtlIcons.dontFlipIcons.title": "Иконки, которые не нужно разворачивать",
  "articleRtlIcons.dontFlipIcons.text": "Можно не разворачивать симметричные иконки. Иконки, которые являются логотипом или представляют бренд тоже не следует зеркалить — они должны оставаться узнаваемыми. Особое внимание уделите элементам, которые подчиняются «правилу правой руки» — если иконка интуитивно ассоциируется с действием правой руки (как держание предмета), её ориентация должна сохраняться независимо от направления письма. Примеры таких иконок:",
  "articleRtlIcons.conclusion.title": "Заключение",
  "articleRtlIcons.conclusion.text1": "Грамотная работа с иконками в RTL-интерфейсах — важная часть локализации. Это не просто техническая деталь, а способ сделать интерфейс по-настоящему удобным для пользователей с разными культурными особенностями.",
  "articleRtlIcons.conclusion.text2": "<strong>Рекомендация:</strong> Разработайте внутренние стандарты для дизайнеров и разработчиков, чтобы обеспечить единый подход к работе с иконками во всех локализациях продукта.",
  "articleUiBy.title": "Двухъязычный интерфейс: как учесть русский и белорусский языки в одном продукте",
  "articleUiBy.text": "Создание интерфейса для Беларуси — это вызов двуязычия. Продукт должен быть понятен и русскоязычным, и белорусскоязычным пользователям. Мы рассматриваем, как организовать структуру переводов, какие существуют UX-решения для переключения языка и почему важно уделять внимание аутентичности белорусского контента.",
  "homePage.hero.title": "Соединяем цифровые миры на всех языках",
  "homePage.hero.conference": "Конференция I&L-{year}",
  "homePage.hero.location": "Москва, Россия",
  "homePage.hero.price": "{price} билет",
  "homePage.hero.register": "Зарегистрироваться",
  "homePage.regionArticle.title": "Актуально для вашего региона",
  "homePage.ruArticle.title": "Как адаптировать веб-приложение под российских пользователей: нюансы локализации",
  "homePage.ruArticle.description": "Изучаем предпочтения русскоязычных пользователей, числовые и валютные форматы, перевод интерфейса и юридические аспекты (например, закон о персональных данных)",
  "homePage.byArticle.title": "Двухъязычный интерфейс: как учесть русский и белорусский языки в одном продукте",
  "homePage.byArticle.description": "Рассматриваем подходы к реализации двуязычного интерфейса, стандарты перевода и культурные отличия. Особое внимание — контенту на белорусском языке",
  "homePage.kzArticle.title": "Русский и казахский: эффективная локализация для Казахстана",
  "homePage.kzArticle.description": "Разбираем сценарии, когда приложение должно быть доступно сразу на двух языках, и особенности казахской локали (в т.ч. поддержка латиницы и кириллицы, особенности форматов дат)",
  "homePage.arArticle.title": "Локализация для арабоязычного мира: RTL, форматы и культурные коды",
  "homePage.arArticle.description": "От адаптации интерфейса под направление письма справа налево до выбора правильных формулировок — ключевые аспекты локализации для стран Ближнего Востока и Северной Африки",
  "homePage.enArticle.title": "Проектирование для глобальной аудитории: английский как универсальный язык",
  "homePage.enArticle.description": "Почему английский часто используется как язык по умолчанию в международных приложениях и как писать интерфейсные тексты, которые будут понятны, культурно нейтральны и удобны для последующей локализации",
  "homePage.rtlArticle.title": "Какие иконки нужно разворачивать для RTL, а какие — нет?",
  "homePage.rtlArticle.description": "Не все иконки требуют зеркального отражения при переключении на RTL-языки. Разбираемся, какие иконки зависят от направления текста, а какие — универсальны",
  "homePage.cssArticle.title": "Логические CSS-свойства в интерфейсах с поддержкой i18n",
  "homePage.cssArticle.description": "Узнайте, как логические CSS-свойства помогают создавать адаптивные интерфейсы для разных языков и направлений письма — без усложнения кода и дублирования стилей.",
  "homePage.articles.title": "Статьи",
  "homePage.articles.description": "Всего {count, plural, one {# статья} few {# статьи} many {# статей} other {# статьи}}",
  "homePage.article.read": "Читать",
  "app.title": "Альт"
} 